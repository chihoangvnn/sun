root@sunfoods:/var/www/sun/backend/public# cat /etc/nginx/sites-available/sunfoods.vn
# sunfoods.vn - production config
# Frontend (static) at /var/www/sun/backend/public/admin
# Backend (API & admin backend) at http://localhost:3000

# Redirect all HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name sunfoods.vn www.sunfoods.vn;

    # Let's Encrypt ACME challenge - allow certbot to renew
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        allow all;
    }

    # Redirect everything else to HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sunfoods.vn www.sunfoods.vn;

    # SSL cert (certbot places files here)
    ssl_certificate /etc/letsencrypt/live/sunfoods.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sunfoods.vn/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Strong ciphers - modern compatibility
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Limits
    client_max_body_size 50M;
    keepalive_timeout 15;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Logging
    access_log /var/log/nginx/sunfoods.vn-access.log;
    error_log  /var/log/nginx/sunfoods.vn-error.log warn;

    # Frontend - static files (SPA)
    root /var/www/sun/backend/public/admin;
    index index.html index.htm;

    # Cache static assets aggressively
    location ~* \.(?:css|js|json|xml|txt|map)$ {
        try_files $uri =404;
        expires 7d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }

    location ~* \.(?:png|jpe?g|gif|ico|webp|avif|svg|ttf|woff2?|eot)$ {
        try_files $uri =404;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }

    # Serve SPA index for non-file requests
    location / {
        # If the requested file exists, serve it; otherwise serve index.html (SPA)
        try_files $uri $uri/ /index.html;
    }

    # API proxy to Node.js backend
    location ^~ /api/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_pass http://127.0.0.1:3000;
        proxy_read_timeout 90s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
    }

    # Admin backend (if your admin routes live on Node)
    location ^~ /adminhoang/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_pass http://127.0.0.1:3000;
        proxy_read_timeout 90s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
    }

    # Optional: return 404 for hidden files (dotfiles)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Certbot may add its own small server block for renewals; keep it separate.